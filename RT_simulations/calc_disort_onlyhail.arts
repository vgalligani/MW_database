(base) vgalligani@elio:~/Work/Studies/Hail_MW/RT_simulations$ more calc_disort_onlyhail.arts 
#DEFINITIONS:  -*-sh-*-

Arts2 {

INCLUDE "cfile_common.arts"
INCLUDE "instrument.arts"

ReadXML( particle_bulkprop_names, "particle_bulkprop_names.xml" )
ReadXML( particle_bulkprop_field, "particle_bulkprop_field.xml" )

Copy( iy_cloudbox_agenda, iy_cloudbox_agenda__QuarticInterpField ) # His suggestion

# Some special variables
#
StringCreate( scat_data_file )
StringCreate( scat_meta_file )
#
StringCreate( species_id_string )

# HWC
#
# try t-matrix:
# First run basic tests of implementation
#####
TMatrixTest

# Define particle and ssd grids
#####

VectorCreate ( data_za_grid )
VectorNLinSpace( data_za_grid, 19, 0, 180 )
VectorCreate ( data_aa_grid )
VectorNLinSpace( data_aa_grid, 19, 0, 180 )
VectorCreate ( data_f_grid )
VectorNLinSpace( data_f_grid, 500, 1e9, 177e9  )
VectorCreate( data_t_grid )
VectorSet( data_t_grid, [ 220, 250, 270] )
complex_refr_indexIceMatzler06(
  data_f_grid = data_f_grid,
  data_T_grid = data_t_grid )
StringCreate( part_shape )
StringSet( part_shape, "spheroidal" )
NumericCreate( part_dveq )
NumericSet( part_dveq, 2e-2 ) # [m] 2cm ... 
NumericCreate( part_ar )
NumericSet( part_ar, 1. )
NumericCreate( part_mass )
NumericSet( part_mass, 0.0038 ) # [kg]; m = Pi/6. * dveq^3 * density_ice

SingleScatteringDataCreate(ref)

# TMatrix calculation: 
#####
scat_data_singleTmatrix(
   shape               = part_shape,
   diameter_volume_equ = part_dveq,
   aspect_ratio        = part_ar,
   mass                = part_mass,
   ptype               = "totally_random",
   data_f_grid         = data_f_grid,
   data_t_grid         = data_t_grid,
   data_za_grid        = data_za_grid,
   data_aa_grid        = data_aa_grid,
)

# Write data to file. And read from file (making sure, format is ok).
#
WriteXML( "ascii", scat_data_single, "TestTMatrix.scat_data_single_hail.xml" )
WriteXML( "ascii", scat_meta_single )

######

ReadXML( scat_data_single, "TestTMatrix.scat_data_single_hail.xml" )
ReadXML( scat_meta_single )

ArrayOfStringSet( pnd_agenda_input_names, [ "HWC" ] )
ReadXML( pnd_field_raw, "hail_pnddata.xml" )

# Set up scattering data
#
scat_dataCalc
scat_data_checkedCalc
WriteXML( "ascii", scat_data,  "scat_data.xml" ) # VB: store scat_data
#
#cloudboxSetFullAtm
cloudboxSetManuallyAltitude( z1=-9e3, z2=20e3, lat1=-0, lat2=0, lon1=-0, lon2=0 )
#cloudboxSetManuallyAltitude( z1=0, z2=20e3, lat1=-0, lat2=0, lon1=-0, lon2=0 )
#
#pnd_fieldCalcFromParticleBulkProps
#pnd_fieldCalcFrompnd_field_raw

WriteXML( "ascii", cloudbox_limits,  "cloudbox_limits.xml" ) # VB: store cloud_box_limits
WriteXML( "ascii", pnd_field,  "pnd_field.xml" ) # VB: store pnd_field

# Check data
#
abs_xsec_agenda_checkedCalc
lbl_checkedCalc                          # !!!
propmat_clearsky_agenda_checkedCalc
atmfields_checkedCalc
atmgeom_checkedCalc
sensor_checkedCalc
cloudbox_checkedCalc

# Calculate and save
#

DOAngularGridsSet( N_za_grid = 38 )

DisortCalcWithARTSSurface(nstreams = 16) #, pfct_method = "interpolate")
#DisortCalc( nstreams = 16, pfct_method = "interpolate")

yCalc
WriteXML( "ascii", y,  "y.xml" )
WriteXML( "ascii", y_geo,  "y_geo.xml" )
}
